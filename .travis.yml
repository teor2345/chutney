language: python

os:
  - linux
  ## We add a single macOS build below

matrix:
  # include creates Linux, python 2.7, tor stable builds by default
  # the key(s) in each item override these defaults
  include:
    ## Test macOS with its default python version, and work around an issue
    ## with language: python on Travis macOS
    ## We get the tor version in the homebrew cache on the macOS image
    - os: osx
      language: c
      env: TOR_VERSION="cached-stable"
    ## Test tor lts, stable, alpha, and nightly
    ## lts and alpha versions need to be manually updated after tor releases
    ## (alpha will revert to stable if the version in its URL is not updated)
    - addons:
        apt:
          sources:
            - sourceline: 'deb https://deb.torproject.org/torproject.org tor-nightly-0.2.9.x-trusty main'
              key_url: 'http://ha.pool.sks-keyservers.net/pks/lookup?search=0xA3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89&options=mr&op=get'
          packages:
            - tor
      env: TOR_VERSION="0.2.9"
    - addons:
        apt:
          sources:
            - sourceline: 'deb https://deb.torproject.org/torproject.org trusty main'
              key_url: 'http://ha.pool.sks-keyservers.net/pks/lookup?search=0xA3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89&options=mr&op=get'
            - sourceline: 'deb https://deb.torproject.org/torproject.org tor-experimental-0.3.5.x-trusty main'
          packages:
            - tor
      env: TOR_VERSION="0.3.5"
    - addons:
        apt:
          sources:
            - sourceline: 'deb https://deb.torproject.org/torproject.org trusty main'
              key_url: 'http://ha.pool.sks-keyservers.net/pks/lookup?search=0xA3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89&options=mr&op=get'
            - sourceline: 'deb https://deb.torproject.org/torproject.org tor-nightly-master-trusty main'
          packages:
            - tor
      env: TOR_VERSION="nightly"
    ## Test all supported python releases
    - python: "2.7"
    - python: "3.4"
    - python: "3.5"
    - python: "3.6"
    ## Travis Trusty doesn't support these versions
    #- python: "3.7"
    #- python: "3.8-dev"
    - python: "nightly"
    # PyPy versions
    ## Travis Trusty doesn't support these versions
    #- python: "pypy2.7"
    - python: "pypy3.5"

  ## Uncomment to allow the build to report success (with non-required
  ## sub-builds continuing to run) if all required sub-builds have
  ## succeeded.  This is somewhat buggy currently: it can cause
  ## duplicate notifications and prematurely report success if a
  ## single sub-build has succeeded.  See
  ## https://github.com/travis-ci/travis-ci/issues/1696
  #fast_finish: true

  ## These builds fail in Travis at the moment
  allow_failures:
    - env: TOR_VERSION="0.3.5"
    - env: TOR_VERSION="nightly"

## We don't need sudo. (The "apt:" stanza after this allows us to not need
## sudo; otherwise, we would need it for getting dependencies.)
sudo: false

## (Linux only) Use the latest Linux image (Ubuntu Trusty)
dist: trusty

## (OSX only) Use the default OSX image
## See https://docs.travis-ci.com/user/reference/osx#os-x-version
## Default is Xcode 9.4 on macOS 10.13 as of August 2018
#osx_image: xcode9.4

## This env var isn't used by the build, but it's useful for debugging
## It should be kept in sync with the Linux tor version below
env:
  - TOR_VERSION="stable"

## Download our dependencies
addons:
  ## (Linux only)
  apt:
    sources:
      ## Trusty has Tor 0.2.4, so we need a newer version of Tor from the
      ## torproject repositories, and the torproject key from the keyservers
      - sourceline: 'deb https://deb.torproject.org/torproject.org trusty main'
        key_url: 'http://ha.pool.sks-keyservers.net/pks/lookup?search=0xA3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89&options=mr&op=get'
    packages:
      - tor
  ## (macOS only)
  homebrew:
    packages:
      - tor

install:
  ## Chutney has no dependencies, apart from tor
  ## List installed package versions
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then dpkg-query --show; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew list --versions; fi
  - python --version
  - tor --version

script:
  - tools/test-network.sh

after_failure:
  ## List the contents of net/nodes
  - ls -lR net/nodes/
  ## Dump the important directory documents
  #- cat net/nodes/000a*/cached-certs
  - cat net/nodes/000a*/cached-consensus
  - cat net/nodes/000a*/cached-descriptors*
  #- cat net/nodes/000a*/cached-extrainfo*
  - cat net/nodes/000a*/cached-microdesc-consensus
  - cat net/nodes/000a*/cached-microdescs*
  #- cat net/nodes/000a*/key-pinning-journal
  #- cat net/nodes/000a*/router-stability
  #- cat net/nodes/00*a*/sr-state
  #- cat net/nodes/00*a*/state
  - for f in net/nodes/00*a*/v3-status-votes ; do echo "$f"; cat "$f"; done
  - for f in net/nodes/00*a*/unparseable-descs/* ; do echo "$f"; cat "$f"; done
  ## Re-run chutney in debug mode
  ## TODO: improve debug mode
  - tools/test-network.sh --debug && echo "chutney debug run succeeded"

notifications:
  irc:
    channels:
      - "irc.oftc.net#tor-ci"
    template:
      - "%{repository} %{branch} %{commit} - %{author}: %{commit_subject}"
      - "Build #%{build_number} %{result}. Details: %{build_url}"
    on_success: change
    on_failure: change
  email:
    on_success: never
    on_failure: change
